{"name": "test_click_product_opens_details_from_next_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".name\"}\n  (Session info: MicrosoftEdge=137.0.3296.62); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff698843915+25605]\n\t(No symbol) [0x0x7ff698793a20]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff698ac6f2a+1962506]\n\t(No symbol) [0x0x7ff6985a86c4]\n\t(No symbol) [0x0x7ff6985a898b]\n\t(No symbol) [0x0x7ff6985e9af7]\n\t(No symbol) [0x0x7ff6985c9e8f]\n\t(No symbol) [0x0x7ff69859ea5d]\n\t(No symbol) [0x0x7ff6985e75df]\n\t(No symbol) [0x0x7ff6985c9bb3]\n\t(No symbol) [0x0x7ff69859df56]\n\t(No symbol) [0x0x7ff69859d463]\n\t(No symbol) [0x0x7ff69859dd83]\n\t(No symbol) [0x0x7ff69869e10d]\n\t(No symbol) [0x0x7ff6986adce8]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6989288e9+265161]\n\tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6989301c1+296097]\n\t(No symbol) [0x0x7ff6987a21c1]\n\t(No symbol) [0x0x7ff69879a664]\n\t(No symbol) [0x0x7ff69879a7b3]\n\t(No symbol) [0x0x7ff69878b986]\n\tBaseThreadInitThunk [0x0x7ff878387374+20]\n\tRtlUserThreadStart [0x0x7ff878a9cc91+33]", "trace": "browser = <selenium.webdriver.edge.webdriver.WebDriver (session=\"deeada59b47ce7a44b16d6bb5fa30a05\")>\n\n    def test_click_product_opens_details_from_next_page(browser):\n        browser.get(\"https://www.demoblaze.com/\")\n        login_page = LoginPage(browser)\n        login_page.open_login_modal()\n        login_page.login(\"user_test123123\", \"test123\")\n        time.sleep(3)\n        products_page = ProductsPage(browser)\n        products_page.go_to_next_page()\n        time.sleep(2)\n        product_name = \"Apple monitor 24\"\n        product_element = browser.find_element(By.LINK_TEXT, product_name)\n        browser.execute_script(\"arguments[0].scrollIntoView();\", product_element)\n        time.sleep(2)\n        product_element.click()\n>       detail_title = browser.find_element(By.CLASS_NAME, \"name\").text\n\ntests\\test_products.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:914: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022D1BAF0D90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...[0x0x7ff69878b986]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff878387374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ff878a9cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".name\"}\nE         (Session info: MicrosoftEdge=137.0.3296.62); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff698843915+25605]\nE       \t(No symbol) [0x0x7ff698793a20]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff698ac6f2a+1962506]\nE       \t(No symbol) [0x0x7ff6985a86c4]\nE       \t(No symbol) [0x0x7ff6985a898b]\nE       \t(No symbol) [0x0x7ff6985e9af7]\nE       \t(No symbol) [0x0x7ff6985c9e8f]\nE       \t(No symbol) [0x0x7ff69859ea5d]\nE       \t(No symbol) [0x0x7ff6985e75df]\nE       \t(No symbol) [0x0x7ff6985c9bb3]\nE       \t(No symbol) [0x0x7ff69859df56]\nE       \t(No symbol) [0x0x7ff69859d463]\nE       \t(No symbol) [0x0x7ff69859dd83]\nE       \t(No symbol) [0x0x7ff69869e10d]\nE       \t(No symbol) [0x0x7ff6986adce8]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6989288e9+265161]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6989301c1+296097]\nE       \t(No symbol) [0x0x7ff6987a21c1]\nE       \t(No symbol) [0x0x7ff69879a664]\nE       \t(No symbol) [0x0x7ff69879a7b3]\nE       \t(No symbol) [0x0x7ff69878b986]\nE       \tBaseThreadInitThunk [0x0x7ff878387374+20]\nE       \tRtlUserThreadStart [0x0x7ff878a9cc91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "start": 1749318547330, "stop": 1749318556723, "uuid": "0862442a-f5e8-47f7-9e34-4c3eb92fe7ce", "historyId": "403d97ce3579b7fd32a73b2194293bb6", "testCaseId": "403d97ce3579b7fd32a73b2194293bb6", "fullName": "tests.test_products#test_click_product_opens_details_from_next_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products"}, {"name": "host", "value": "DESKTOP-J50PE39"}, {"name": "thread", "value": "5672-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products"}]}